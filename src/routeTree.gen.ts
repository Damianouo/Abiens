/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppMoneyLoveRouteImport } from './routes/_app/money-love'
import { Route as AppMerchRouteImport } from './routes/_app/merch'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMoneyLoveRoute = AppMoneyLoveRouteImport.update({
  id: '/money-love',
  path: '/money-love',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppMerchRoute = AppMerchRouteImport.update({
  id: '/merch',
  path: '/merch',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/merch': typeof AppMerchRoute
  '/money-love': typeof AppMoneyLoveRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/merch': typeof AppMerchRoute
  '/money-love': typeof AppMoneyLoveRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/merch': typeof AppMerchRoute
  '/_app/money-love': typeof AppMoneyLoveRoute
  '/_app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/merch' | '/money-love' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/merch' | '/money-love' | '/'
  id: '__root__' | '/_app' | '/_app/merch' | '/_app/money-love' | '/_app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/money-love': {
      id: '/_app/money-love'
      path: '/money-love'
      fullPath: '/money-love'
      preLoaderRoute: typeof AppMoneyLoveRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/merch': {
      id: '/_app/merch'
      path: '/merch'
      fullPath: '/merch'
      preLoaderRoute: typeof AppMerchRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppMerchRoute: typeof AppMerchRoute
  AppMoneyLoveRoute: typeof AppMoneyLoveRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppMerchRoute: AppMerchRoute,
  AppMoneyLoveRoute: AppMoneyLoveRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
